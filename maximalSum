package multidimentionalArraysPractice;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Scanner;

public class maximalSum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] rowsAndCols=Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        int rows=rowsAndCols[0];
        int cols=rowsAndCols[1];
        int[][] matrix=new int[rows][cols];
        for (int i=0;i<rows;i++){
            matrix[i]=Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
                   }
        int maximumSum=Integer.MIN_VALUE;
        int row=0, col=0;
        for (int r=1;r<matrix.length-1;r++){
            for (int c=1;c<matrix[r].length-1;c++){
                int sum=getSum(matrix, r, c);
                if (sum>maximumSum){
                    maximumSum=sum;
                    row=r;
                    col=c;
                }
            }
        }
        row--;
        col--;
        System.out.println("Sum = " + maximumSum);
        for (int i=row;i<row+3;i++){
            for (int j=col;j<col+3;j++){
                System.out.print(matrix[i][j]+" ");
                }
            System.out.println();
        }
    }
    private static int getSum(int[][] matrix, int r, int c) {
   int sum=0;
        sum+=matrix[r][c];
        sum+=matrix[r-1][c-1];
        sum+=matrix[r-1][c];
        sum+=matrix[r-1][c+1];
        sum+=matrix[r][c-1];
        sum+=matrix[r][c+1];
        sum+=matrix[r+1][c-1];
        sum+=matrix[r+1][c];
        sum+=matrix[r+1][c+1];
 //       r--;
 //       c--;
   //     for (int i=r;i<r+3;i++){
     ///       for (int j=c;j<c+3;j++){
       //         sum+=matrix[i][j];
 //           }
   //     }
        return sum;
    }
    }






